@model LocacaoVeiculos.Models.Locacao

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Locacao</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DtRetirada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DtRetirada, new { htmlAttributes = new { @class = "form-control" } })


   
      <!--          <div id="Calender"></div>            -- Calendario para registrar as datas de saida e entrada (Incompleto) --

                <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.css" rel="stylesheet" />
                <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.print.css" rel="stylesheet" />

                section Scripts{
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.js"></script>

                    <script>
                        $(document).ready(function () {

                            var events = [];

                            $.ajax({
                                type: "GET",
                                url: "home/GetEvents",
                                success: function (data) {
                                    $.each(data, function (i, v) {
                                        events.push({
                                            title: v.Subject,
                                            description: v.Descrioption,
                                            start: moment(v.Start),
                                            end: v.end != null ? moment(v.End) : null,
                                            color: v.ThemeColor,
                                            allDay: v.IsFullDay
                                        });
                                    })

                                    GenerateCalender(events);

                                },
                                error: function (error) {
                                    alert('failed');
                                }
                            })

                        
                            function GenerateCalender(events) {
                                $('#calender').fullCalender('destroy');
                                $('#calender').fullCalender({
                                    contentHeight: 400,
                                    defaulDate: new Date(),
                                    timeFormat: 'h(:mm)a',
                                    header: {
                                        left: 'prev,next,today',
                                        center: 'title',
                                        right: 'month,basicWeek,basicDay,agenda'
                                    },
                                    eventLimit: true,
                                    eventColor: '#37006',
                                    events: events
                                })
                            }
                        })

                    </script>
                }
          -->

                @Html.ValidationMessageFor(model => model.DtRetirada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DtDevolucao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DtDevolucao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DtDevolucao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VeiculoID, "VeiculoID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VeiculoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VeiculoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClienteID, "ClienteID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClienteID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClienteID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsuarioID, "UsuarioID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UsuarioID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UsuarioID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacoes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacoes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacoes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opcionais, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opcionais, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opcionais, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
